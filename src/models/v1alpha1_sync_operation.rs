/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1SyncOperation : SyncOperation contains details about a sync operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1SyncOperation {
    #[serde(rename = "autoHealAttemptsCount", skip_serializing_if = "Option::is_none")]
    pub auto_heal_attempts_count: Option<i64>,
    #[serde(rename = "dryRun", skip_serializing_if = "Option::is_none")]
    pub dry_run: Option<bool>,
    #[serde(rename = "manifests", skip_serializing_if = "Option::is_none")]
    pub manifests: Option<Vec<String>>,
    #[serde(rename = "prune", skip_serializing_if = "Option::is_none")]
    pub prune: Option<bool>,
    #[serde(rename = "resources", skip_serializing_if = "Option::is_none")]
    pub resources: Option<Vec<models::V1alpha1SyncOperationResource>>,
    /// Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<String>,
    /// Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
    #[serde(rename = "revisions", skip_serializing_if = "Option::is_none")]
    pub revisions: Option<Vec<String>>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "syncOptions", skip_serializing_if = "Option::is_none")]
    pub sync_options: Option<Vec<String>>,
    #[serde(rename = "syncStrategy", skip_serializing_if = "Option::is_none")]
    pub sync_strategy: Option<Box<models::V1alpha1SyncStrategy>>,
}

impl V1alpha1SyncOperation {
    /// SyncOperation contains details about a sync operation.
    pub fn new() -> V1alpha1SyncOperation {
        V1alpha1SyncOperation {
            auto_heal_attempts_count: None,
            dry_run: None,
            manifests: None,
            prune: None,
            resources: None,
            revision: None,
            revisions: None,
            source: None,
            sources: None,
            sync_options: None,
            sync_strategy: None,
        }
    }
}

