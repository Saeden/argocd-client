/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryHelmAppSpec {
    #[serde(rename = "fileParameters", skip_serializing_if = "Option::is_none")]
    pub file_parameters: Option<Vec<models::V1alpha1HelmFileParameter>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<models::V1alpha1HelmParameter>>,
    #[serde(rename = "valueFiles", skip_serializing_if = "Option::is_none")]
    pub value_files: Option<Vec<String>>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<String>,
}

impl RepositoryHelmAppSpec {
    pub fn new() -> RepositoryHelmAppSpec {
        RepositoryHelmAppSpec {
            file_parameters: None,
            name: None,
            parameters: None,
            value_files: None,
            values: None,
        }
    }
}
