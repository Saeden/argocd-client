/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1SyncPolicy {
    #[serde(rename = "automated", skip_serializing_if = "Option::is_none")]
    pub automated: Option<Box<models::V1alpha1SyncPolicyAutomated>>,
    #[serde(
        rename = "managedNamespaceMetadata",
        skip_serializing_if = "Option::is_none"
    )]
    pub managed_namespace_metadata: Option<Box<models::V1alpha1ManagedNamespaceMetadata>>,
    #[serde(rename = "retry", skip_serializing_if = "Option::is_none")]
    pub retry: Option<Box<models::V1alpha1RetryStrategy>>,
    #[serde(rename = "syncOptions", skip_serializing_if = "Option::is_none")]
    pub sync_options: Option<Vec<String>>,
}

impl V1alpha1SyncPolicy {
    pub fn new() -> V1alpha1SyncPolicy {
        V1alpha1SyncPolicy {
            automated: None,
            managed_namespace_metadata: None,
            retry: None,
            sync_options: None,
        }
    }
}
