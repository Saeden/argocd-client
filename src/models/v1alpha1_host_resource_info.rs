/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1HostResourceInfo : HostResourceInfo represents resource usage details for a specific resource type on a host.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1HostResourceInfo {
    /// Capacity represents the total available capacity of this resource on the host.
    #[serde(rename = "capacity", skip_serializing_if = "Option::is_none")]
    pub capacity: Option<i64>,
    /// RequestedByApp indicates the total amount of this resource requested by the application running on the host.
    #[serde(rename = "requestedByApp", skip_serializing_if = "Option::is_none")]
    pub requested_by_app: Option<i64>,
    /// RequestedByNeighbors indicates the total amount of this resource requested by other workloads on the same host.
    #[serde(rename = "requestedByNeighbors", skip_serializing_if = "Option::is_none")]
    pub requested_by_neighbors: Option<i64>,
    /// ResourceName specifies the type of resource (e.g., CPU, memory, storage).
    #[serde(rename = "resourceName", skip_serializing_if = "Option::is_none")]
    pub resource_name: Option<String>,
}

impl V1alpha1HostResourceInfo {
    /// HostResourceInfo represents resource usage details for a specific resource type on a host.
    pub fn new() -> V1alpha1HostResourceInfo {
        V1alpha1HostResourceInfo {
            capacity: None,
            requested_by_app: None,
            requested_by_neighbors: None,
            resource_name: None,
        }
    }
}

