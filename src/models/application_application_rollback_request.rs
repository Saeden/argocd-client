/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationApplicationRollbackRequest {
    #[serde(rename = "appNamespace", skip_serializing_if = "Option::is_none")]
    pub app_namespace: Option<String>,
    #[serde(rename = "dryRun", skip_serializing_if = "Option::is_none")]
    pub dry_run: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
    #[serde(rename = "prune", skip_serializing_if = "Option::is_none")]
    pub prune: Option<bool>,
}

impl ApplicationApplicationRollbackRequest {
    pub fn new() -> ApplicationApplicationRollbackRequest {
        ApplicationApplicationRollbackRequest {
            app_namespace: None,
            dry_run: None,
            id: None,
            name: None,
            project: None,
            prune: None,
        }
    }
}
