/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1GnuPgPublicKey {
    #[serde(rename = "fingerprint", skip_serializing_if = "Option::is_none")]
    pub fingerprint: Option<String>,
    #[serde(rename = "keyData", skip_serializing_if = "Option::is_none")]
    pub key_data: Option<String>,
    #[serde(rename = "keyID", skip_serializing_if = "Option::is_none")]
    pub key_id: Option<String>,
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    #[serde(rename = "subType", skip_serializing_if = "Option::is_none")]
    pub sub_type: Option<String>,
    #[serde(rename = "trust", skip_serializing_if = "Option::is_none")]
    pub trust: Option<String>,
}

impl V1alpha1GnuPgPublicKey {
    pub fn new() -> V1alpha1GnuPgPublicKey {
        V1alpha1GnuPgPublicKey {
            fingerprint: None,
            key_data: None,
            key_id: None,
            owner: None,
            sub_type: None,
            trust: None,
        }
    }
}
