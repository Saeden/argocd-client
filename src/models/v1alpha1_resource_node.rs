/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ResourceNode : ResourceNode contains information about a live Kubernetes resource and its relationships with other resources.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ResourceNode {
    /// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.  +protobuf.options.marshal=false +protobuf.as=Timestamp +protobuf.options.(gogoproto.goproto_stringer)=false
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "health", skip_serializing_if = "Option::is_none")]
    pub health: Option<Box<models::V1alpha1HealthStatus>>,
    /// Images lists container images associated with the resource. This is primarily useful for pods and other workload resources.
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<Vec<String>>,
    /// Info provides additional metadata or annotations about the resource.
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<Vec<models::V1alpha1InfoItem>>,
    #[serde(rename = "networkingInfo", skip_serializing_if = "Option::is_none")]
    pub networking_info: Option<Box<models::V1alpha1ResourceNetworkingInfo>>,
    /// ParentRefs lists the parent resources that reference this resource. This helps in understanding ownership and hierarchical relationships.
    #[serde(rename = "parentRefs", skip_serializing_if = "Option::is_none")]
    pub parent_refs: Option<Vec<models::V1alpha1ResourceRef>>,
    /// ResourceVersion indicates the version of the resource, used to track changes.
    #[serde(rename = "resourceVersion", skip_serializing_if = "Option::is_none")]
    pub resource_version: Option<String>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
}

impl V1alpha1ResourceNode {
    /// ResourceNode contains information about a live Kubernetes resource and its relationships with other resources.
    pub fn new() -> V1alpha1ResourceNode {
        V1alpha1ResourceNode {
            created_at: None,
            health: None,
            images: None,
            info: None,
            networking_info: None,
            parent_refs: None,
            resource_version: None,
            group: None,
            kind: None,
            name: None,
            namespace: None,
            uid: None,
            version: None,
        }
    }
}
