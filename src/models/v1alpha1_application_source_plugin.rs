/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationSourcePlugin {
    #[serde(rename = "env", skip_serializing_if = "Option::is_none")]
    pub env: Option<Vec<models::Applicationv1alpha1EnvEntry>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<models::V1alpha1ApplicationSourcePluginParameter>>,
}

impl V1alpha1ApplicationSourcePlugin {
    pub fn new() -> V1alpha1ApplicationSourcePlugin {
        V1alpha1ApplicationSourcePlugin {
            env: None,
            name: None,
            parameters: None,
        }
    }
}

