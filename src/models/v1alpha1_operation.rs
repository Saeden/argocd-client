/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1Operation {
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<Vec<models::V1alpha1Info>>,
    #[serde(rename = "initiatedBy", skip_serializing_if = "Option::is_none")]
    pub initiated_by: Option<Box<models::V1alpha1OperationInitiator>>,
    #[serde(rename = "retry", skip_serializing_if = "Option::is_none")]
    pub retry: Option<Box<models::V1alpha1RetryStrategy>>,
    #[serde(rename = "sync", skip_serializing_if = "Option::is_none")]
    pub sync: Option<Box<models::V1alpha1SyncOperation>>,
}

impl V1alpha1Operation {
    pub fn new() -> V1alpha1Operation {
        V1alpha1Operation {
            info: None,
            initiated_by: None,
            retry: None,
            sync: None,
        }
    }
}

