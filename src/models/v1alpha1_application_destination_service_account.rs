/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ApplicationDestinationServiceAccount : ApplicationDestinationServiceAccount holds information about the service account to be impersonated for the application sync operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationDestinationServiceAccount {
    #[serde(rename = "defaultServiceAccount", skip_serializing_if = "Option::is_none")]
    pub default_service_account: Option<String>,
    /// Namespace specifies the target namespace for the application's resources.
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    /// Server specifies the URL of the target cluster's Kubernetes control plane API.
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<String>,
}

impl V1alpha1ApplicationDestinationServiceAccount {
    /// ApplicationDestinationServiceAccount holds information about the service account to be impersonated for the application sync operation.
    pub fn new() -> V1alpha1ApplicationDestinationServiceAccount {
        V1alpha1ApplicationDestinationServiceAccount {
            default_service_account: None,
            namespace: None,
            server: None,
        }
    }
}

