/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ApplicationSpec : ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationSpec {
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<Box<models::V1alpha1ApplicationDestination>>,
    #[serde(rename = "ignoreDifferences", skip_serializing_if = "Option::is_none")]
    pub ignore_differences: Option<Vec<models::V1alpha1ResourceIgnoreDifferences>>,
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<Vec<models::V1alpha1Info>>,
    /// Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
    /// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
    #[serde(rename = "revisionHistoryLimit", skip_serializing_if = "Option::is_none")]
    pub revision_history_limit: Option<i64>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "sourceHydrator", skip_serializing_if = "Option::is_none")]
    pub source_hydrator: Option<Box<models::V1alpha1SourceHydrator>>,
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "syncPolicy", skip_serializing_if = "Option::is_none")]
    pub sync_policy: Option<Box<models::V1alpha1SyncPolicy>>,
}

impl V1alpha1ApplicationSpec {
    /// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
    pub fn new() -> V1alpha1ApplicationSpec {
        V1alpha1ApplicationSpec {
            destination: None,
            ignore_differences: None,
            info: None,
            project: None,
            revision_history_limit: None,
            source: None,
            source_hydrator: None,
            sources: None,
            sync_policy: None,
        }
    }
}

