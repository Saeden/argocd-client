/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterSettings {
    #[serde(rename = "additionalUrls", skip_serializing_if = "Option::is_none")]
    pub additional_urls: Option<Vec<String>>,
    #[serde(rename = "appLabelKey", skip_serializing_if = "Option::is_none")]
    pub app_label_key: Option<String>,
    #[serde(rename = "appsInAnyNamespaceEnabled", skip_serializing_if = "Option::is_none")]
    pub apps_in_any_namespace_enabled: Option<bool>,
    /// Deprecated: use sidecar plugins instead.
    #[serde(rename = "configManagementPlugins", skip_serializing_if = "Option::is_none")]
    pub config_management_plugins: Option<Vec<models::V1alpha1ConfigManagementPlugin>>,
    #[serde(rename = "controllerNamespace", skip_serializing_if = "Option::is_none")]
    pub controller_namespace: Option<String>,
    #[serde(rename = "dexConfig", skip_serializing_if = "Option::is_none")]
    pub dex_config: Option<Box<models::ClusterDexConfig>>,
    #[serde(rename = "execEnabled", skip_serializing_if = "Option::is_none")]
    pub exec_enabled: Option<bool>,
    #[serde(rename = "googleAnalytics", skip_serializing_if = "Option::is_none")]
    pub google_analytics: Option<Box<models::ClusterGoogleAnalyticsConfig>>,
    #[serde(rename = "help", skip_serializing_if = "Option::is_none")]
    pub help: Option<Box<models::ClusterHelp>>,
    #[serde(rename = "hydratorEnabled", skip_serializing_if = "Option::is_none")]
    pub hydrator_enabled: Option<bool>,
    #[serde(rename = "impersonationEnabled", skip_serializing_if = "Option::is_none")]
    pub impersonation_enabled: Option<bool>,
    #[serde(rename = "installationID", skip_serializing_if = "Option::is_none")]
    pub installation_id: Option<String>,
    #[serde(rename = "kustomizeOptions", skip_serializing_if = "Option::is_none")]
    pub kustomize_options: Option<Box<models::V1alpha1KustomizeOptions>>,
    #[serde(rename = "kustomizeVersions", skip_serializing_if = "Option::is_none")]
    pub kustomize_versions: Option<Vec<String>>,
    #[serde(rename = "oidcConfig", skip_serializing_if = "Option::is_none")]
    pub oidc_config: Option<Box<models::ClusterOidcConfig>>,
    #[serde(rename = "passwordPattern", skip_serializing_if = "Option::is_none")]
    pub password_pattern: Option<String>,
    #[serde(rename = "plugins", skip_serializing_if = "Option::is_none")]
    pub plugins: Option<Vec<models::ClusterPlugin>>,
    #[serde(rename = "resourceOverrides", skip_serializing_if = "Option::is_none")]
    pub resource_overrides: Option<std::collections::HashMap<String, models::V1alpha1ResourceOverride>>,
    #[serde(rename = "statusBadgeEnabled", skip_serializing_if = "Option::is_none")]
    pub status_badge_enabled: Option<bool>,
    #[serde(rename = "statusBadgeRootUrl", skip_serializing_if = "Option::is_none")]
    pub status_badge_root_url: Option<String>,
    #[serde(rename = "trackingMethod", skip_serializing_if = "Option::is_none")]
    pub tracking_method: Option<String>,
    #[serde(rename = "uiBannerContent", skip_serializing_if = "Option::is_none")]
    pub ui_banner_content: Option<String>,
    #[serde(rename = "uiBannerPermanent", skip_serializing_if = "Option::is_none")]
    pub ui_banner_permanent: Option<bool>,
    #[serde(rename = "uiBannerPosition", skip_serializing_if = "Option::is_none")]
    pub ui_banner_position: Option<String>,
    #[serde(rename = "uiBannerURL", skip_serializing_if = "Option::is_none")]
    pub ui_banner_url: Option<String>,
    #[serde(rename = "uiCssURL", skip_serializing_if = "Option::is_none")]
    pub ui_css_url: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "userLoginsDisabled", skip_serializing_if = "Option::is_none")]
    pub user_logins_disabled: Option<bool>,
}

impl ClusterSettings {
    pub fn new() -> ClusterSettings {
        ClusterSettings {
            additional_urls: None,
            app_label_key: None,
            apps_in_any_namespace_enabled: None,
            config_management_plugins: None,
            controller_namespace: None,
            dex_config: None,
            exec_enabled: None,
            google_analytics: None,
            help: None,
            hydrator_enabled: None,
            impersonation_enabled: None,
            installation_id: None,
            kustomize_options: None,
            kustomize_versions: None,
            oidc_config: None,
            password_pattern: None,
            plugins: None,
            resource_overrides: None,
            status_badge_enabled: None,
            status_badge_root_url: None,
            tracking_method: None,
            ui_banner_content: None,
            ui_banner_permanent: None,
            ui_banner_position: None,
            ui_banner_url: None,
            ui_css_url: None,
            url: None,
            user_logins_disabled: None,
        }
    }
}

