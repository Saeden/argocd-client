/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRepoAppDetailsQuery {
    #[serde(rename = "appName", skip_serializing_if = "Option::is_none")]
    pub app_name: Option<String>,
    #[serde(rename = "appProject", skip_serializing_if = "Option::is_none")]
    pub app_project: Option<String>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "sourceIndex", skip_serializing_if = "Option::is_none")]
    pub source_index: Option<i32>,
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<i32>,
}

impl RepositoryRepoAppDetailsQuery {
    pub fn new() -> RepositoryRepoAppDetailsQuery {
        RepositoryRepoAppDetailsQuery {
            app_name: None,
            app_project: None,
            source: None,
            source_index: None,
            version_id: None,
        }
    }
}
