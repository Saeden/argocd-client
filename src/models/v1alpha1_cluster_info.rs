/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ClusterInfo {
    #[serde(rename = "apiVersions", skip_serializing_if = "Option::is_none")]
    pub api_versions: Option<Vec<String>>,
    #[serde(rename = "applicationsCount", skip_serializing_if = "Option::is_none")]
    pub applications_count: Option<i64>,
    #[serde(rename = "cacheInfo", skip_serializing_if = "Option::is_none")]
    pub cache_info: Option<Box<models::V1alpha1ClusterCacheInfo>>,
    #[serde(rename = "connectionState", skip_serializing_if = "Option::is_none")]
    pub connection_state: Option<Box<models::V1alpha1ConnectionState>>,
    #[serde(rename = "serverVersion", skip_serializing_if = "Option::is_none")]
    pub server_version: Option<String>,
}

impl V1alpha1ClusterInfo {
    pub fn new() -> V1alpha1ClusterInfo {
        V1alpha1ClusterInfo {
            api_versions: None,
            applications_count: None,
            cache_info: None,
            connection_state: None,
            server_version: None,
        }
    }
}
