/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationSetStatus {
    #[serde(rename = "applicationStatus", skip_serializing_if = "Option::is_none")]
    pub application_status: Option<Vec<models::V1alpha1ApplicationSetApplicationStatus>>,
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<models::V1alpha1ApplicationSetCondition>>,
    /// Resources is a list of Applications resources managed by this application set.
    #[serde(rename = "resources", skip_serializing_if = "Option::is_none")]
    pub resources: Option<Vec<models::Applicationv1alpha1ResourceStatus>>,
}

impl V1alpha1ApplicationSetStatus {
    pub fn new() -> V1alpha1ApplicationSetStatus {
        V1alpha1ApplicationSetStatus {
            application_status: None,
            conditions: None,
            resources: None,
        }
    }
}

