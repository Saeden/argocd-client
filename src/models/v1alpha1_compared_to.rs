/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ComparedTo {
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<Box<models::V1alpha1ApplicationDestination>>,
    #[serde(rename = "ignoreDifferences", skip_serializing_if = "Option::is_none")]
    pub ignore_differences: Option<Vec<models::V1alpha1ResourceIgnoreDifferences>>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<models::V1alpha1ApplicationSource>>,
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<models::V1alpha1ApplicationSource>>,
}

impl V1alpha1ComparedTo {
    pub fn new() -> V1alpha1ComparedTo {
        V1alpha1ComparedTo {
            destination: None,
            ignore_differences: None,
            source: None,
            sources: None,
        }
    }
}
