/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1HostInfo : HostInfo holds metadata and resource usage metrics for a specific host in the cluster.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1HostInfo {
    /// Labels holds the labels attached to the host.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    /// Name is the hostname or node name in the Kubernetes cluster.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// ResourcesInfo provides a list of resource usage details for different resource types on this host.
    #[serde(rename = "resourcesInfo", skip_serializing_if = "Option::is_none")]
    pub resources_info: Option<Vec<models::V1alpha1HostResourceInfo>>,
    #[serde(rename = "systemInfo", skip_serializing_if = "Option::is_none")]
    pub system_info: Option<Box<models::V1NodeSystemInfo>>,
}

impl V1alpha1HostInfo {
    /// HostInfo holds metadata and resource usage metrics for a specific host in the cluster.
    pub fn new() -> V1alpha1HostInfo {
        V1alpha1HostInfo {
            labels: None,
            name: None,
            resources_info: None,
            system_info: None,
        }
    }
}

