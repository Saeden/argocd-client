/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ApplicationSetSpec : ApplicationSetSpec represents a class of application set state.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationSetSpec {
    /// ApplyNestedSelectors enables selectors defined within the generators of two level-nested matrix or merge generators Deprecated: This field is ignored, and the behavior is always enabled. The field will be removed in a future version of the ApplicationSet CRD.
    #[serde(
        rename = "applyNestedSelectors",
        skip_serializing_if = "Option::is_none"
    )]
    pub apply_nested_selectors: Option<bool>,
    #[serde(rename = "generators", skip_serializing_if = "Option::is_none")]
    pub generators: Option<Vec<models::V1alpha1ApplicationSetGenerator>>,
    #[serde(rename = "goTemplate", skip_serializing_if = "Option::is_none")]
    pub go_template: Option<bool>,
    #[serde(rename = "goTemplateOptions", skip_serializing_if = "Option::is_none")]
    pub go_template_options: Option<Vec<String>>,
    #[serde(
        rename = "ignoreApplicationDifferences",
        skip_serializing_if = "Option::is_none"
    )]
    pub ignore_application_differences:
        Option<Vec<models::V1alpha1ApplicationSetResourceIgnoreDifferences>>,
    #[serde(rename = "preservedFields", skip_serializing_if = "Option::is_none")]
    pub preserved_fields: Option<Box<models::V1alpha1ApplicationPreservedFields>>,
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<Box<models::V1alpha1ApplicationSetStrategy>>,
    #[serde(rename = "syncPolicy", skip_serializing_if = "Option::is_none")]
    pub sync_policy: Option<Box<models::V1alpha1ApplicationSetSyncPolicy>>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<Box<models::V1alpha1ApplicationSetTemplate>>,
    #[serde(rename = "templatePatch", skip_serializing_if = "Option::is_none")]
    pub template_patch: Option<String>,
}

impl V1alpha1ApplicationSetSpec {
    /// ApplicationSetSpec represents a class of application set state.
    pub fn new() -> V1alpha1ApplicationSetSpec {
        V1alpha1ApplicationSetSpec {
            apply_nested_selectors: None,
            generators: None,
            go_template: None,
            go_template_options: None,
            ignore_application_differences: None,
            preserved_fields: None,
            strategy: None,
            sync_policy: None,
            template: None,
            template_patch: None,
        }
    }
}
