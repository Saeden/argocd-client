/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1RevisionMetadata : RevisionMetadata contains metadata for a specific revision in a Git repository. This field is used by the Source Hydrator feature which may be removed in the future.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1RevisionMetadata {
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<String>,
    /// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.  +protobuf.options.marshal=false +protobuf.as=Timestamp +protobuf.options.(gogoproto.goproto_stringer)=false
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// Message contains the message associated with the revision, most likely the commit message.
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// References contains references to information that's related to this commit in some way.
    #[serde(rename = "references", skip_serializing_if = "Option::is_none")]
    pub references: Option<Vec<models::V1alpha1RevisionReference>>,
    /// SignatureInfo contains a hint on the signer if the revision was signed with GPG, and signature verification is enabled.
    #[serde(rename = "signatureInfo", skip_serializing_if = "Option::is_none")]
    pub signature_info: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl V1alpha1RevisionMetadata {
    /// RevisionMetadata contains metadata for a specific revision in a Git repository. This field is used by the Source Hydrator feature which may be removed in the future.
    pub fn new() -> V1alpha1RevisionMetadata {
        V1alpha1RevisionMetadata {
            author: None,
            date: None,
            message: None,
            references: None,
            signature_info: None,
            tags: None,
        }
    }
}

