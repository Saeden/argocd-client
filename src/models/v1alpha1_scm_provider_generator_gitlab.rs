/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ScmProviderGeneratorGitlab : SCMProviderGeneratorGitlab defines connection info specific to Gitlab.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ScmProviderGeneratorGitlab {
    /// Scan all branches instead of just the default branch.
    #[serde(rename = "allBranches", skip_serializing_if = "Option::is_none")]
    pub all_branches: Option<bool>,
    /// The Gitlab API URL to talk to.
    #[serde(rename = "api", skip_serializing_if = "Option::is_none")]
    pub api: Option<String>,
    #[serde(rename = "caRef", skip_serializing_if = "Option::is_none")]
    pub ca_ref: Option<Box<models::V1alpha1ConfigMapKeyRef>>,
    /// Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path.
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    #[serde(rename = "includeSharedProjects", skip_serializing_if = "Option::is_none")]
    pub include_shared_projects: Option<bool>,
    #[serde(rename = "includeSubgroups", skip_serializing_if = "Option::is_none")]
    pub include_subgroups: Option<bool>,
    #[serde(rename = "insecure", skip_serializing_if = "Option::is_none")]
    pub insecure: Option<bool>,
    #[serde(rename = "tokenRef", skip_serializing_if = "Option::is_none")]
    pub token_ref: Option<Box<models::V1alpha1SecretRef>>,
    /// Filter repos list based on Gitlab Topic.
    #[serde(rename = "topic", skip_serializing_if = "Option::is_none")]
    pub topic: Option<String>,
}

impl V1alpha1ScmProviderGeneratorGitlab {
    /// SCMProviderGeneratorGitlab defines connection info specific to Gitlab.
    pub fn new() -> V1alpha1ScmProviderGeneratorGitlab {
        V1alpha1ScmProviderGeneratorGitlab {
            all_branches: None,
            api: None,
            ca_ref: None,
            group: None,
            include_shared_projects: None,
            include_subgroups: None,
            insecure: None,
            token_ref: None,
            topic: None,
        }
    }
}

