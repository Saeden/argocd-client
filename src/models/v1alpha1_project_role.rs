/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ProjectRole {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<String>>,
    #[serde(rename = "jwtTokens", skip_serializing_if = "Option::is_none")]
    pub jwt_tokens: Option<Vec<models::V1alpha1JwtToken>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "policies", skip_serializing_if = "Option::is_none")]
    pub policies: Option<Vec<String>>,
}

impl V1alpha1ProjectRole {
    pub fn new() -> V1alpha1ProjectRole {
        V1alpha1ProjectRole {
            description: None,
            groups: None,
            jwt_tokens: None,
            name: None,
            policies: None,
        }
    }
}
