/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SessionGetUserInfoResponse {
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<String>>,
    #[serde(rename = "iss", skip_serializing_if = "Option::is_none")]
    pub iss: Option<String>,
    #[serde(rename = "loggedIn", skip_serializing_if = "Option::is_none")]
    pub logged_in: Option<bool>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl SessionGetUserInfoResponse {
    pub fn new() -> SessionGetUserInfoResponse {
        SessionGetUserInfoResponse {
            groups: None,
            iss: None,
            logged_in: None,
            username: None,
        }
    }
}
