/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProjectProjectTokenCreateRequest : ProjectTokenCreateRequest defines project token creation parameters.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectProjectTokenCreateRequest {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "expiresIn", skip_serializing_if = "Option::is_none")]
    pub expires_in: Option<i64>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "project", skip_serializing_if = "Option::is_none")]
    pub project: Option<String>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
}

impl ProjectProjectTokenCreateRequest {
    /// ProjectTokenCreateRequest defines project token creation parameters.
    pub fn new() -> ProjectProjectTokenCreateRequest {
        ProjectProjectTokenCreateRequest {
            description: None,
            expires_in: None,
            id: None,
            project: None,
            role: None,
        }
    }
}
