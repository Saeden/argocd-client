/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ApplicationTree : ApplicationTree represents the hierarchical structure of resources associated with an Argo CD application.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ApplicationTree {
    /// Hosts provides a list of Kubernetes nodes that are running pods related to the application.
    #[serde(rename = "hosts", skip_serializing_if = "Option::is_none")]
    pub hosts: Option<Vec<models::V1alpha1HostInfo>>,
    /// Nodes contains a list of resources that are either directly managed by the application or are children of directly managed resources.
    #[serde(rename = "nodes", skip_serializing_if = "Option::is_none")]
    pub nodes: Option<Vec<models::V1alpha1ResourceNode>>,
    /// OrphanedNodes contains resources that exist in the same namespace as the application but are not managed by it. This list is populated only if orphaned resource tracking is enabled in the application's project settings.
    #[serde(rename = "orphanedNodes", skip_serializing_if = "Option::is_none")]
    pub orphaned_nodes: Option<Vec<models::V1alpha1ResourceNode>>,
    /// ShardsCount represents the total number of shards the application tree is split into. This is used to distribute resource processing across multiple shards.
    #[serde(rename = "shardsCount", skip_serializing_if = "Option::is_none")]
    pub shards_count: Option<i64>,
}

impl V1alpha1ApplicationTree {
    /// ApplicationTree represents the hierarchical structure of resources associated with an Argo CD application.
    pub fn new() -> V1alpha1ApplicationTree {
        V1alpha1ApplicationTree {
            hosts: None,
            nodes: None,
            orphaned_nodes: None,
            shards_count: None,
        }
    }
}
