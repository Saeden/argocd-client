/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StreamResultOfV1alpha1ApplicationWatchEvent {
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<models::RuntimeStreamError>>,
    #[serde(rename = "result", skip_serializing_if = "Option::is_none")]
    pub result: Option<Box<models::V1alpha1ApplicationWatchEvent>>,
}

impl StreamResultOfV1alpha1ApplicationWatchEvent {
    pub fn new() -> StreamResultOfV1alpha1ApplicationWatchEvent {
        StreamResultOfV1alpha1ApplicationWatchEvent {
            error: None,
            result: None,
        }
    }
}

