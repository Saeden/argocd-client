/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryRepoAppDetailsResponse {
    #[serde(rename = "directory", skip_serializing_if = "Option::is_none")]
    pub directory: Option<serde_json::Value>,
    #[serde(rename = "helm", skip_serializing_if = "Option::is_none")]
    pub helm: Option<Box<models::RepositoryHelmAppSpec>>,
    #[serde(rename = "kustomize", skip_serializing_if = "Option::is_none")]
    pub kustomize: Option<Box<models::RepositoryKustomizeAppSpec>>,
    #[serde(rename = "plugin", skip_serializing_if = "Option::is_none")]
    pub plugin: Option<Box<models::RepositoryPluginAppSpec>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl RepositoryRepoAppDetailsResponse {
    pub fn new() -> RepositoryRepoAppDetailsResponse {
        RepositoryRepoAppDetailsResponse {
            directory: None,
            helm: None,
            kustomize: None,
            plugin: None,
            r#type: None,
        }
    }
}
