/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ClusterCacheInfo {
    #[serde(rename = "apisCount", skip_serializing_if = "Option::is_none")]
    pub apis_count: Option<i64>,
    /// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.  +protobuf.options.marshal=false +protobuf.as=Timestamp +protobuf.options.(gogoproto.goproto_stringer)=false
    #[serde(rename = "lastCacheSyncTime", skip_serializing_if = "Option::is_none")]
    pub last_cache_sync_time: Option<String>,
    #[serde(rename = "resourcesCount", skip_serializing_if = "Option::is_none")]
    pub resources_count: Option<i64>,
}

impl V1alpha1ClusterCacheInfo {
    pub fn new() -> V1alpha1ClusterCacheInfo {
        V1alpha1ClusterCacheInfo {
            apis_count: None,
            last_cache_sync_time: None,
            resources_count: None,
        }
    }
}

