/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1ScmProviderGeneratorGithub : SCMProviderGeneratorGithub defines connection info specific to GitHub.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1ScmProviderGeneratorGithub {
    /// Scan all branches instead of just the default branch.
    #[serde(rename = "allBranches", skip_serializing_if = "Option::is_none")]
    pub all_branches: Option<bool>,
    /// The GitHub API URL to talk to. If blank, use https://api.github.com/.
    #[serde(rename = "api", skip_serializing_if = "Option::is_none")]
    pub api: Option<String>,
    /// AppSecretName is a reference to a GitHub App repo-creds secret.
    #[serde(rename = "appSecretName", skip_serializing_if = "Option::is_none")]
    pub app_secret_name: Option<String>,
    /// GitHub org to scan. Required.
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<String>,
    #[serde(rename = "tokenRef", skip_serializing_if = "Option::is_none")]
    pub token_ref: Option<Box<models::V1alpha1SecretRef>>,
}

impl V1alpha1ScmProviderGeneratorGithub {
    /// SCMProviderGeneratorGithub defines connection info specific to GitHub.
    pub fn new() -> V1alpha1ScmProviderGeneratorGithub {
        V1alpha1ScmProviderGeneratorGithub {
            all_branches: None,
            api: None,
            app_secret_name: None,
            organization: None,
            token_ref: None,
        }
    }
}

