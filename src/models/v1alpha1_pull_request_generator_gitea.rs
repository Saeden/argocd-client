/*
 * Consolidate Services
 *
 * Description of all APIs
 *
 * The version of the OpenAPI document: version not set
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1alpha1PullRequestGeneratorGitea : PullRequestGeneratorGitea defines connection info specific to Gitea.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1alpha1PullRequestGeneratorGitea {
    #[serde(rename = "api", skip_serializing_if = "Option::is_none")]
    pub api: Option<String>,
    /// Allow insecure tls, for self-signed certificates; default: false.
    #[serde(rename = "insecure", skip_serializing_if = "Option::is_none")]
    pub insecure: Option<bool>,
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<Vec<String>>,
    /// Gitea org or user to scan. Required.
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    /// Gitea repo name to scan. Required.
    #[serde(rename = "repo", skip_serializing_if = "Option::is_none")]
    pub repo: Option<String>,
    #[serde(rename = "tokenRef", skip_serializing_if = "Option::is_none")]
    pub token_ref: Option<Box<models::V1alpha1SecretRef>>,
}

impl V1alpha1PullRequestGeneratorGitea {
    /// PullRequestGeneratorGitea defines connection info specific to Gitea.
    pub fn new() -> V1alpha1PullRequestGeneratorGitea {
        V1alpha1PullRequestGeneratorGitea {
            api: None,
            insecure: None,
            labels: None,
            owner: None,
            repo: None,
            token_ref: None,
        }
    }
}

